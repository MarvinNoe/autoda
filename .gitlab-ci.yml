stages:
  - test
  - doc
  - deploy

default:
  image: gitlab.uni-koblenz.de:4567/marvinnoethen/benchmarking-autoda:latest
  before_script:
    - pip3 install -Ur ./requirements.txt

# run unit tests
pytest:
  stage: test
  script:
    - pip3 install pytest pytest-cov pytest-randomly pytest-mock
    - pytest -v --cov --cov-report term-missing --cov-report xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  variables:
    COMPLEX_TESTS_ENABLED: "false"


# check codebase for errors, styling issues (pep8) and complexity
flake8:
  stage: test
  script:
    - pip3 install -r ./requirements-flake8.txt
    - flake8 src tests
    
# find common security issues in codebase
bandit:
  stage: test    
  script:
    - pip3 install bandit
    - bandit -r src/

# check static typing

mypy:
  stage: test
  script:
    - pip3 install mypy
    - mypy --strict --ignore-missing-imports src/

# find common security issues in environment
.audit:
  stage: test
  script:
    - pip3 install pip-audit
    - pip-audit
  allow_failure: true

# generate the documentation website using pdoc
pdoc:
  stage: doc   
  script:
    - pip3 install pdoc
    - pdoc ./src/autoda -o ./doc/
  artifacts:
    paths:
      - doc
#  only: 
#    - main

.pages:
  stage: deploy
  dependencies:
    - pdoc
  script:
    - mkdir .public
    - cp -r ./doc/* .public
    - mv .public public
  artifacts:
    paths:
      - public
  only: 
    - main
